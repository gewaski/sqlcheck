#ifndef __FUNC_H__
#define __FUNC_H__

typedef struct Func {
    int id;
    char *funcName;
} Func;

Func _arrayFunc[] = {
{FSTART, ""},
{FABS,"ABS"}, 
{FACOS,"ACOS"},
{FADDTIME,"ADDTIME"},
{FAES_DECRYPT,"AES_DECRYPT"},
{FAES_ENCRYPT,"AES_ENCRYPT"},
{FAREA,"AREA"},
{FASBINARY,"ASBINARY"},
{FASIN,"ASIN"},
{FASTEXT,"ASTEXT"},
{FASWKB,"ASWKB"},
{FASWKT,"ASWKT"},
{FATAN,"ATAN"},
{FATAN2,"ATAN2"},
{FASCII,"ASCII"},
{FAVG,"AVG"},
{FADDDATE,"ADDDATE"},
{FBENCHMARK,"BENCHMARK"},
{FBIN,"BIN"},
{FBIT_AND,"BIT_AND"},
{FBIT_OR,"BIT_OR"},
{FBIT_XOR,"BIT_XOR"},
{FBIT_COUNT,"BIT_COUNT"},
{FBIT_LENGTH,"BIT_LENGTH"},
{FCAST,"CAST"},
{FCEILING,"CEILING"},
{FCENTROID,"CENTROID"},
{FCHAR,"CHAR"},
{FCHARACTER_LENGTH,"CHARACTER_LENGTH"},
{FCOERCIBILITY,"COERCIBILITY"},
{FCOMPRESS,"COMPRESS"},
{FCONCAT,"CONCAT"},
{FCONCAT_WS,"CONCAT_WS"},
{FCONNECTION_ID,"CONNECTION_ID"},
{FCONV,"CONV"},
{FCONVERT_TZ,"CONVERT_TZ"},
{FCOS,"COS"},
{FCOT,"COT"},
{FCRC32,"CRC32"},
{FCROSSESS,"CROSSESS"},
{FCOUNT,"COUNT"},
{FCHARSET,"CHARSET"},
{FCOLLATION,"COLLATION"},
{FCURRENT_USER,"CURRENT_USER"},
{FCURDATE,"CURDATE"},
{FCURRENT_DATE,"CURRENT_DATE"},
{FCURTIME,"CURTIME"},
{FCURTIME_TIME,"CURTIME_TIME"},
{FCURRENT_TIMESTAMP,"CURRENT_TIMESTAMP"},
{FDATE,"DATE"},
{FDATEDIFF,"DATEDIFF"},
{FDATENAME,"DATENAME"},
{FDATEOFMONTH,"DATEOFMONTH"},
{FDATEOFWEEK,"DATEOFWEEK"},
{FDATEOFYEAR,"DATEOFYEAR"},
{FDATE_ADD,"DATE_ADD"},
{FDATE_SUB,"DATE_SUB"},
{FDATE_FORMAT,"DATE_FORMAT"},
{FDATABASE,"DATABASE"},
{FDEFAULT,"DEFAULT"},
{FDECODE,"DECODE"},
{FDEGREES,"DEGREES"},
{FDES_DECRYPT,"DES_DECRYPT"},
{FDES_ENCRYPT,"DES_ENCRYPT"},
{FDIMENSION,"DIMENSION"},
{FISJOINT,"ISJOINT"},
{FELT,"ELT"},
{FENCODE,"ENCODE"},
{FENCRYPT,"ENCRYPT"},
{FENDPOINT,"ENDPOINT"},
{FENVELOPE,"ENVELOPE"},
{FEQUALS,"EQUALS"},
{FEXP,"EXP"},
{FEXPORT_SET,"EXPORT_SET"},
{FEXTRACT,"EXTRACT"},
{FEXTERIORRING,"EXTERIORRING"},
{FEXTRACTVALUE,"EXTRACTVALUE"},
{FFIELD,"FIELD"},
{FFIND_IN_SET,"FIND_IN_SET"},
{FFLOOR,"FLOOR"},
{FFORMAT,"FORMAT"},
{FFOUND_ROWS,"FOUND_ROWS"},
{FFROM_DAYS,"FROM_DAYS"},
{FFROM_UNIXTIME,"FROM_UNIXTIME"},
{FGET_FORMAT,"GET_FORMAT"},
{FGEOMCOLLFROMTEXT,"GEOMCOLLFROMTEXT"},
{FGEOMCOLLFROMWKB,"GEOMCOLLFROMWKB"},
{FGEOMETRYCOLLECTIONFROMTEXT,"GEOMETRYCOLLECTIONFROMTEXT"},
{FGEOMETRYCOLLECTIONFROMWKB,"GEOMETRYCOLLECTIONFROMWKB"},
{FGEOMETRYFROMTEXT,"GEOMETRYFROMTEXT"},
{FGEOMETRYFROMWKB,"GEOMETRYFROMWKB"},
{FGEOMETRYN,"GEOMETRYN"},
{FGEOMETRYTYPE,"GEOMETRYTYPE"},
{FGEOMFROMTEXT,"GEOMFROMTEXT"},
{FGEOMFROMWKB,"GEOMFROMWKB"},
{FGET_LOCK,"GET_LOCK"},
{FGLENGTH,"GLENGTH"},
{FGREATEST,"GREATEST"},
{FHEX,"HEX"},
{FHOUR,"HOUR"},
{FINSERT,"INSERT"},
{FINSTR,"INSTR"},
{FIFNULL,"IFNULL"},
{FIF,"IF"},
{FINET_ATON,"INET_ATON"},
{FINET_NTOA,"INET_NTOA"},
{FINTERIORRINGN,"INTERIORRINGN"},
{FINTERSECTS,"INTERSECTS"},
{FISCLOSED,"ISCLOSED"},
{FISEMPTY,"ISEMPTY"},
{FISNULL,"ISNULL"},
{FISSIMPLE,"ISSIMPLE"},
{FIS_FREE_LOCK,"IS_FREE_LOCK"},
{FIS_USED_LOCK,"IS_USED_LOCK"},
{FLAST_DAY,"LAST_DAY"},
{FLAST_INSERT_ID,"LAST_INSERT_ID"},
{FLCASE,"LCASE"},
{FLEFT,"LEFT"},
{FLENGTH,"LENGTH"},
{FLINEFROMTEXT,"LINEFROMTEXT"},
{FLINEFROMWKB,"LINEFROMWKB"},
{FLINESTRINGFROMTEXT,"LINESTRINGFROMTEXT"},
{FLINESTRINGFROMWKB,"LINESTRINGFROMWKB"},
{FLN,"LN"},
{FLOAD_FILE,"LOAD_FILE"},
{FLOCATE,"LOCATE"},
{FLOG,"LOG"},
{FLOG10,"LOG10"},
{FLOG2,"LOG2"},
{FLOWER,"LOWER"},
{FLPAD,"LPAD"},
{FLTRIM,"LTRIM"},
{FLOCALTIME,"LOCALTIME"},
{FLOCALTIMESTAMP,"LOCALTIMESTAMP"},
{FMAKEDATE,"MAKEDATE"},
{FMAKETIME,"MAKETIME"},
{FMAKE_SET,"MAKE_SET"},
{FMASTER_POS_WAIT,"MASTER_POS_WAIT"},
{FMBRCONTAINS,"MBRCONTAINS"},
{FMBRDISJOINT,"MBRDISJOINT"},
{FMBREQUAL,"MBREQUAL"},
{FMBRINTERSECTS,"MBRINTERSECTS"},
{FMBROVERLAPS,"MBROVERLAPS"},
{FMBRTOUCHES,"MBRTOUCHES"},
{FMBRWITHIN,"MBRWITHIN"},
{FMD5,"MD5"},
{FMLINEFROMTEXT,"MLINEFROMTEXT"},
{FMLINEFROMWKB,"MLINEFROMWKB"},
{FMONTHNAME,"MONTHNAME"},
{FMPOINTFROMTEXT,"MPOINTFROMTEXT"},
{FMPOINTFROMWKB,"MPOINTFROMWKB"},
{FMPOLYFROMTEXT,"MPOLYFROMTEXT"},
{FMPOLYFROMWKB,"MPOLYFROMWKB"},
{FMULTILINESTRINGFROMTEXT,"MULTILINESTRINGFROMTEXT"},
{FMULTILINESTRINGFROMWKB,"MULTILINESTRINGFROMWKB"},
{FMULTIPOINTFROMTEXT,"MULTIPOINTFROMTEXT"},
{FMULTIPOINTFROMWKB,"MULTIPOINTFROMWKB"},
{FMULTIPOLYGONFROMTEXT,"MULTIPOLYGONFROMTEXT"},
{FMULTIPOLYGONFROMWKB,"MULTIPOLYGONFROMWKB"},
{FMICROSECOND,"MICROSECOND"},
{FMINUTE,"MINUTE"},
{FMONTH,"MONTH"},
{FGROUP_CONCAT,"GROUP_CONCAT"},
{FMAX,"MAX"},
{FMID,"MID"},
{FMIN,"MIN"},
{FMOD,"MOD"},
{FNOW,"NOW"},
{FNAME_CONST,"NAME_CONST"},
{FNULLIF,"NULLIF"},
{FNUMGEOMETRIES,"NUMGEOMETRIES"},
{FNUMINTERIORRINGS,"NUMINTERIORRINGS"},
{FNUMPOINTS,"NUMPOINTS"},
{FOCT,"OCT"},
{FOCTET_LENGTH,"OCTET_LENGTH"},
{FORD,"ORD"},
{FOVERLAPS,"OVERLAPS"},
{FOLD_PASSWORD,"OLD_PASSWORD"},
{FPERIOD_ADD,"PERIOD_ADD"},
{FPERIOD_DIFF,"PERIOD_DIFF"},
{FPI,"PI"},
{FPOSITION,"POSITION"},
{FPASSWORD,"PASSWORD"},
{FPOINTFROMTEXT,"POINTFROMTEXT"},
{FPOINTFROMWKB,"POINTFROMWKB"},
{FPOINTN,"POINTN"},
{FPOLYFROMTEXT,"POLYFROMTEXT"},
{FPOLYFROMWKB,"POLYFROMWKB"},
{FPOLYGONFROMTEXT,"POLYGONFROMTEXT"},
{FPOLYGONFROMWKB,"POLYGONFROMWKB"},
{FPOWER,"POWER"},
{FQUARTER,"QUARTER"},
{FQUOTE,"QUOTE"},
{FRADIANS,"RADIANS"},
{FRAND,"RAND"},
{FROUND,"ROUND"},
{FROW_COUNT,"ROW_COUNT"},
{FREPEAT,"REPEAT"},
{FREPLACE,"REPLACE"},
{FREVERSE,"REVERSE"},
{FRIGHT,"RIGHT"},
{FRPAD,"RPAD"},
{FRTRIM,"RTRIM"},
{FRELEASE_LOCK,"RELEASE_LOCK"},
{FSEC_TO_TIME,"SEC_TO_TIME"},
{FSEC_TO_DATE,"SEC_TO_DATE"},
{FSHA,"SHA"},
{FSHA1,"SHA1"},
{FSLEEP,"SLEEP"},
{FSCHEMA,"SCHEMA"},
{FSOUNDEX,"SOUNDEX"},
{FSPACE,"SPACE"},
{FSQRT,"SQRT"},
{FSRID,"SRID"},
{FSTARTPOINT,"STARTPOINT"},
{FSTRCMP,"STRCMP"},
{FSTR_TO_DATE,"STR_TO_DATE"},
{FSECOND,"SECOND"},
{FSUBTIME,"SUBTIME"},
{FSIGN,"SIGN"},
{FSIN,"SIN"},
{FSUBSTRING,"SUBSTRING"},
{FSUBSTRING_INDEX,"SUBSTRING_INDEX"},
{FSESSION_USER,"SESSION_USER"},
{FSTD,"STD"},
{FSTDDEV,"STDDEV"},
{FSTDDEV_POP,"STDDEV_POP"},
{FSTDDEV_SAMP,"STDDEV_SAMP"},
{FSUBDATE,"SUBDATE"},
{FSUM,"SUM"},
{FSYSDATE,"SYSDATE"},
{FSYSTEM_USER,"SYSTEM_USER"},
{FTAN,"TAN"},
{FTIMEDIFF,"TIMEDIFF"},
{FTIME_FORMAT,"TIME_FORMAT"},
{FTIME_TO_SEC,"TIME_TO_SEC"},
{FTRUNCATE,"TRUNCATE"},
{FTOUCHES,"TOUCHES"},
{FTO_DAYS,"TO_DAYS"},
{FTRIM,"TRIM"},
{FTIME,"TIME"},
{FTIMESTAMP,"TIMESTAMP"},
{FTIMESTAMPADD,"TIMESTAMPADD"},
{FTIMESTAMPDIFF,"TIMESTAMPDIFF"},
{FVARIANCE,"VARIANCE"},
{FVAR_POP,"VAR_POP"},
{FVAR_SAMP,"VAR_SAMP"},
{FUCASE,"UCASE"},
{FUNCOMPRESS,"UNCOMPRESS"},
{FUNCOMPRESSED_LENGTH,"UNCOMPRESSED_LENGTH"},
{FUNHEX,"UNHEX"},
{FUSER,"USER"},
{FUNIX_TIMESTAMP,"UNIX_TIMESTAMP"},
{FUPDATEXML,"UPDATEXML"},
{FUPPER,"UPPER"},
{FUUID,"UUID"},
{FUUID_SHORT,"UUID_SHORT"},
{FVERSION,"VERSION"},
{FUTC_DATE,"UTC_DATE"},
{FUTC_TIME,"UTC_TIME"},
{FUTC_TIMESTAMP,"UTC_TIMESTAMP"},
{FWEEK,"WEEK"},
{FWEEKDAY,"WEEKDAY"},
{FWEEKOFYEAR,"WEEKOFYEAR"},
{FYEAR,"YEAR"},
{FYEARWEEK,"YEARWEEK"},
{FX,"X"},
{FY,"Y"},
{FEND, ""}
};

Func arrayFunc[FEND];

void convert() {
    int l = sizeof(_arrayFunc) /sizeof(_arrayFunc[0]);
    int i;
    for (i = 0; i < l; i ++) {
        arrayFunc[_arrayFunc[i].id].funcName = _arrayFunc[i].funcName;
    }
}
void print() {
    int l = sizeof(_arrayFunc) /sizeof(_arrayFunc[0]);
    int i = FSTART + 1;
    for (; i < FEND; i ++) {
        printf("%s\n", arrayFunc[i].funcName);
    }
}

#define FUNCNAME(f) (arrayFunc[f].funcName)

#endif

